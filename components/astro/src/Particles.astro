---
import type { Container, Engine, ISourceOptions } from "tsparticles-engine";

export interface IParticlesProps {
    id: string;
    options?: ISourceOptions;
    url?: string;
}

const { id, options, url } = Astro.props as IParticlesProps;
---
<astro-particles data-id={id} data-options={JSON.stringify(options)} data-url={url}>
    <canvas></canvas>
</astro-particles>

<script>
    import { tsParticles } from "tsparticles-engine";

    class AstroParticles extends HTMLElement {
        constructor() {
            super();

            (async () => {
                if (this.dataset.url) {
                    await tsParticles.loadJSON(this.dataset.id, this.dataset.url);
                } else if (this.dataset.options) {
                    await tsParticles.load(this.dataset.id, JSON.parse(this.dataset.options));
                }
            })();
        }
    }

    customElements.define('astro-particles', AstroParticles);
</script>
