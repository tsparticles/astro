---
import type { ISourceOptions } from "@tsparticles/engine";
interface Props {
  id: string;
  options: ISourceOptions;
}
const { id, options } = Astro.props;
---

<astro-particles data-options={JSON.stringify(options)} id={id}
></astro-particles>
<script>
  import { tsParticles, type ISourceOptions } from "@tsparticles/engine";
  import { loadAll } from "@tsparticles/all";
  class AstroParticles extends HTMLElement {
    constructor() {
      super();
      const options = this.dataset.options || "{}";
      const id = this.id;
      const parsedOptions = JSON.parse(options) as ISourceOptions;
      if (!id) {
        throw new Error("tsParticles: No id provided");
      }
      if (!options) {
        throw new Error("tsParticles: No config provided");
      }
      loadAll(tsParticles);
      tsParticles.load({
        id: this.id,
        options: parsedOptions,
      });
    }
  }

  customElements.define("astro-particles", AstroParticles);
</script>
